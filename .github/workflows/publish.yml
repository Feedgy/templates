name: publish

# configure as reusable workflow
on:
    workflow_call:
        inputs:
            python-version:
                required: false
                type: string
                default: '3.10'
                description: 'version of python use to build. Default 3.10'
            pre_release_branches:
                required: false
                type: string
                default: staging
                description: 'comma separated list of pre release branches'
            release_branches:
                required: false
                type: string
                default: production
                description: 'comma separated list of release branches'
            repository:
                required: true
                type: string
                description: 'name of the repository to upload the artifact'
            dist-location:
                required: false
                type: string
                default: 'dist'
                description: 'location of the dist directory. Default : dist'
            # AWS specific
            aws-region:
                required: false
                type: string
                default: 'eu-west-3'
                description: 'aws region where the referential is'
            domain:
                required: true
                type: string
                description: 'domain name to upload the artifact on code artifact'
            domain-owner:
                required: true
                type: string
                description: 'domain owner of referential on code artifact'
        secrets:
            registry_token:
                required: true
                description: 'token to have access to registry'
            AWS_KEY_ID:
                required: true
            AWS_SECRET:
                required: true


jobs:
    tag:
        runs-on: ubuntu-latest
        outputs:
            new_tag: ${{ steps.tag_version.outputs.new_tag }}
            new_version: ${{ steps.tag_version.outputs.new_version }}
            changelog: ${{ steps.tag_version.outputs.changelog }}
        steps:
            -   uses: actions/checkout@v2
            -   name: Bump version and push tag
                id: tag_version
                uses: mathieudutour/github-tag-action@v6.0
                with:
                    github_token: ${{ secrets.registry_token }}
                    release_branches: ${{ inputs.release_branches }}
                    pre_release_branches: ${{ inputs.pre_release_branches }}
    build:
        runs-on: ubuntu-latest
        needs:
            - tag
        outputs:
            BUILD_VERSION: ${{ needs.tag.outputs.new_tag }}
        steps:
            -   uses: actions/checkout@v2
            # Use python 3.10 to use last setup.py
            -   uses: actions/setup-python@v2
                with:
                    python-version: ${{ inputs.python-version }}
            -   name: Install Wheel
                run: pip install wheel
            -   name: Build package
                run: |
                    export LIB_VERSION=${{ needs.tag.outputs.new_tag }}
                    python3 setup.py build_ext sdist bdist_wheel
            -   uses: actions/upload-artifact@v2
                with:
                    name: 'dist-result'
                    path: ${{ inputs.dist-location }}
                    retention-days: 1
    publish-on-code-artifact:
        runs-on: ubuntu-latest
        needs:
            - build
        steps:
            -   uses: actions/download-artifact@v2
                with:
                    name: 'dist-result'
                    path: ${{ inputs.dist-location }}
            -   name: Install Twine
                run: pip install twine
            -   name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v1
                with:
                    aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET }}
                    aws-region: ${{ inputs.aws-region }}
            -   name: publish in Code Artifact
                run: |
                    export TWINE_USERNAME=aws
                    export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain ${{ inputs.domain }} --domain-owner ${{ inputs.domain-owner }} --query authorizationToken --output text`
                    export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain ${{ inputs.domain }} --domain-owner ${{ inputs.domain-owner }} --repository ${{ inputs.repository }} --format pypi --query repositoryEndpoint --output text`
                    export LIB_VERSION=${{ needs.build.outputs.BUILD_VERSION }}
                    twine upload ${{ inputs.dist-location }}/*

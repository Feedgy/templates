name: build-docker

# configure as reusable workflow
on:
    workflow_call:
        inputs:
            to_ghcr:
                required: false
                type: boolean
                default: true
                description: 'true to push to ghcr.io'
            to_ecr:
                required: false
                type: boolean
                default: false
                description: 'true to push to ecr'
            image_name:
                required: true
                type: string
                description: 'name of the image'
            docker_context:
                required: false
                type: string
                default: .
                description: 'context of build for docker'
            docker_build_args:
                required: false
                type: string
                description: 'docker build args formated in multiline string with |'
            dockerfile_path:
                required: false
                type: string
                default: ./Dockerfile
                description: 'location to get the Dockerfile for the build'
            docker_target:
                required: false
                type: string
                default: ''
                description: 'Sets the target to build Dockerfile'
            username:
                required: true
                type: string
                description: 'username to push the image can use github.actor'
            branch:
                required: true
                type: string
                description: 'name of the branch can use github.ref_name'
            tag:
                required: false
                type: string
                default: latest
                description: 'tag to push the image with'
            dry_run:
                required: false
                type: boolean
                default: false
                description: 'build only with the new version of tag'
        outputs:
            pushed_tag:
                value: ${{ jobs.deploy-docker.outputs.pushed_tag }}
        secrets:
            registry_token:
                required: true
                description: 'token to have access to registry'
            repos_token:
                required: false
                description: 'token to have access to code and infra repository'

jobs:
    tag:
        runs-on: ubuntu-latest
        outputs:
            new_tag: ${{ steps.tag_version.outputs.new_tag }}
            new_version: ${{ steps.tag_version.outputs.new_version }}
            changelog: ${{ steps.tag_version.outputs.changelog }}
        steps:
            - uses: actions/checkout@v2
              with:
                  token: ${{ secrets.repos_token}}
            - name: Bump version and push tag
              id: tag_version
              uses: mathieudutour/github-tag-action@v6.0
              with:
                  # use PAT token to enable to merge production in master at release
                  github_token: ${{ secrets.repos_token}}
                  release_branches: ${{ inputs.release_branches }}
                  pre_release_branches: ${{ inputs.pre_release_branches }}
                  dry_run: ${{ inputs.dry_run }}
                
    deploy-docker:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            id-token: write
            packages: write
        env:
            default_registry: ghcr.io
            platform: linux/amd64
        needs:
            - tag
        outputs:
            pushed_tag: ${{needs.tag.outputs.new_tag}}
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v2

            -   id: image_registry_lower
                uses: ASzc/change-string-case-action@v2
                with:
                    string: ${{ env.default_registry}}/${{ inputs.IMAGE_NAME }}/${{ inputs.branch }}
            # Set docker driver to permit cache
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1
                with:
                    driver: docker-container
                    driver-opts: |
                        image=moby/buildkit:master
                        network=host
            # Login against a Docker registry except on PR
            # https://github.com/docker/login-action
            -   name: Log into registry ghcr.io
                if: github.event_name != 'pull_request' && ${{ inputs.to_ghcr }}
                uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
                with:
                    registry: ghcr.io
                    username: ${{ inputs.username }}
                    password: ${{ secrets.registry_token }}
            - name: Configure AWS credentials
              if: github.event_name != 'pull_request' && ${{ inputs.to_ecr }}
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: arn:aws:iam::687044813332:role/github-assume-role-stack-Role-tdTka5sntGFH
                aws-region: eu-west-3
                mask-aws-account-id: 'false'
                
            -   name: Log into registry ECR
                if: github.event_name != 'pull_request' && ${{ inputs.to_ecr }}
                uses: docker/login-action@v3
                with:
                    registry: 687044813332.dkr.ecr.eu-west-3.amazonaws.com
            # Extract metadata (tags, labels) for Docker
            # https://github.com/docker/metadata-action
            -   name: Extract Docker metadata
                id: meta
                uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
                with:
                    github-token: ${{ secrets.registry_token }}
                    images: |
                        ${{ steps.image_registry_lower.outputs.lowercase }}
                        687044813332.dkr.ecr.eu-west-3.amazonaws.com/data-science
                    tags: |
                        type=semver, pattern={{raw}}, value=${{ needs.tag.outputs.new_tag }}
                        type=ref, event=branch
            # Build and push Docker image with Buildx (don't push on PR)
            # https://github.com/docker/build-push-action
            -   name: Build and push Docker image
                uses: docker/build-push-action@v2
                id: build
                with:
                    context: ${{ inputs.docker_context }}
                    push: ${{ inputs.dry_run == false }}
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    file: ${{ inputs.dockerfile_path }}
                    cache-from: type=registry,ref=${{ steps.image_registry_lower.outputs.lowercase }}:buildcache-${{ inputs.branch }}
                    cache-to: type=registry,ref=${{ steps.image_registry_lower.outputs.lowercase }}:buildcache-${{ inputs.branch }},mode=max
                    build-args: ${{ inputs.docker_build_args }}
                    target: ${{ inputs.docker_target }}
name: ci

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        default: "ghcr.io"
        description: "registry to push and get the image"
      image_name:
        required: true
        type: string
        description: "name of the image"
      username:
        required: true
        type: string
        description: "username to push the image can use github.actor"
      target_branch:
        required: false
        type: string
        default: "master"
        description: "Sets the target to build Dockerfile"
      git_lfs:
        required: false
        type: boolean
        default: false
        description: "git lfs checkout"
      coverage_file_path:
        required: false
        type: string
        default: "coverage.xml"
        description: "absolute path to coverage file"
      enable_black:
        required: false
        type: boolean
        default: false
        description: "enable black formatter"

    secrets:
      registry_token:
        required: true
        description: "token to have access to registry"
      repos_token:
        required: true
        description: "token to have access to code and infra repository"
      lintly_token:
        required: true
        description: "token to have access to lintly"

jobs:
  image_tag:
    name: Image tag for docker image pull
    runs-on: ubuntu-latest
    outputs:
      docker_image: ${{ steps.image_name.outputs.lowercase }}
    steps:
      - id: image_name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ inputs.image_name }}

  security-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bandit
        uses: jpetrucciani/bandit-check@main

  run-linters:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs:
      - formater
    steps:
      - uses: actions/checkout@v2
      - name: Flake8
        uses: sanoguzhan/lintly-flake8-github-action@master
        with:
          token: ${{ secrets.lintly_token }}
          failIf: new
          args: "--ignore=E121,E123 ."

  formater:
    name: black
    if:
      ${{ inputs.enable_black}}
    runs-on: ubuntu-latest
    needs:
      - security-check
    steps:
      - uses: actions/checkout@v2
      - name: Check files using the black formatter
        uses: datadog/action-py-black-formatter@v2.1
        id: action_black
      - name: Create Pull Request
        if: steps.action_black.outputs.is_formatted == 'true'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.repos_token }}
          title: "Format Python code with psf/black push"
          commit-message: ":art: Format Python code with psf/black"
          body: |
            There appear to be some python formatting errors in ${{ github.sha }}. This pull request
            uses the [psf/black](https://github.com/psf/black) formatter to fix these issues.
          base: ${{ github.head_ref }}
          branch: actions/black

  test:
    name: Run Tests and Coverage
    runs-on: ubuntu-latest
    needs:
      - image_tag
    container:
      image: ${{ inputs.registry }}/${{ needs.image_tag.outputs.docker_image }}/${{ inputs.target_branch }}:latest
      options: --user root
      credentials:
        username: ${{ inputs.username }}
        password: ${{ secrets.registry_token }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: ${{ inputs.git_lfs }}
      - name: test
        run: |
          pytest --cov --cov-report=xml:${{ inputs.coverage_file_path }}
      - name: Coverage Report
        uses: orgoro/coverage@v3
        if: github.event_name == 'pull_request'
        with:
          coverageFile: ${{ inputs.coverage_file_path }}
          token: ${{ secrets.repos_token }}
